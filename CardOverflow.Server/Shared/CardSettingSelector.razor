@using Microsoft.FSharp.Core
@using CardOverflow.Entity
@using CardOverflow.Debug
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using CardOverflow.Sanitation
@using CardOverflow.Server.Data
@inject DbExecutor DbExecutor
@inject IToastService ToastService

<select class="form-control" @onchange=@(x => x.Value.ToString().Apply(int.Parse).Apply(_SetSelected))>
  @foreach (var setting in _settings) {
    <option value=@setting.Id selected=@(SelectedId == setting.Id)>@setting.Name</option>
  }
</select>

@code {
  [CascadingParameter]
  UserEntity User { get; set; }
  [Parameter]
  public int SelectedId { get; set; }
  [Parameter]
  public EventCallback<int> SettingSelected { get; set; }
  private List<ViewCardSetting> _settings = new List<ViewCardSetting>();

  protected override async Task OnInitializedAsync() {
    _settings = await DbExecutor.QueryAsync(db => SanitizeCardSettingRepository.getAll(db, User.Id));
  }

  private async Task _SetSelected(int newId) {
    SelectedId = newId;
    await SettingSelected.InvokeAsync(newId);
  }

}
