@using Microsoft.FSharp.Core
@using CardOverflow.Entity
@using CardOverflow.Debug
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using CardOverflow.Sanitation
@using CardOverflow.Server.Data
@inject DbExecutor DbExecutor
@inject IToastService ToastService

<select class="form-control" @onchange=@(x => x.Value.ToString().Apply(int.Parse).Apply(_SetSelected))>
  @foreach (var option in _options) {
    <option value=@option.Id selected=@(SelectedId == option.Id)>@option.Name</option>
  }
</select>

@code {
  [CascadingParameter]
  UserEntity User { get; set; }
  [Parameter]
  public int SelectedId { get; set; }
  [Parameter]
  public EventCallback<int> OptionSelected { get; set; }
  private List<ViewCardOption> _options = new List<ViewCardOption>();

  protected override async Task OnInitializedAsync() {
    _options = await DbExecutor.QueryAsync(db => SanitizeCardOptionRepository.getAll(db, User.Id));
  }

  private async Task _SetSelected(int newId) {
    SelectedId = newId;
    await OptionSelected.InvokeAsync(newId);
  }

}
