@using Microsoft.FSharp.Core
@using CardOverflow.Entity
@using CardOverflow.Debug
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using CardOverflow.Sanitation
@using CardOverflow.Server.Data
@inject IToastService ToastService
@inherits OwningComponentBase<CardOverflowDb>

@if (User != null) {
  @foreach (var tag in Tags) {
    <li class="m-1">
      <button type="button" class="btn btn-primary btn-sm">
        <span class="badge badge-success">1</span> @tag
      </button>
    </li>
  }
  <EditForm Model=@WriteTag OnValidSubmit=@SaveTag>
    <div class="form-group form-inline btn-group">
      <InputText @bind-Value=@WriteTag.Text class="form-control" /> @*this seems to break validation: @bind-Value:event="oninput"*@
      <button type="submit" class="btn btn-primary">Add</button>
      <DataAnnotationsValidator />
      <ValidationSummary />
    </div>
  </EditForm>
}

@code {
  [CascadingParameter]
  UserEntity User { get; set; }
  [Parameter]
  public int CardId { get; set; }
  TagText WriteTag = new TagText();
  List<string> Tags = new List<string>();

  void SaveTag() {
    var r = SanitizeTagRepository.AddTo(Service, WriteTag, User.Id, CardId);
    if (r.IsOk) {
      Tags.Add(WriteTag.Text);
      Tags = Tags.Distinct().ToList();
      WriteTag.Text = "";
    } else {
      ToastService.ShowError(r.ErrorValue);
    }
  }

}
