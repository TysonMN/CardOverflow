@using ThoughtDesign.WebLibrary
@using Microsoft.FSharp.Core
@using CardOverflow.Entity
@using CardOverflow.Debug
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using CardOverflow.Sanitation
@using CardOverflow.Server.Data
@inject IJSRuntime Js
@inject UrlProvider UrlProvider

<iframe sandbox="allow-scripts allow-same-origin" src=@_src scrolling="no" @ref="iframe" @onload=@iframeloaded
        style="width: 1px; min-width: 100%; height:100px;" />

@code {
  [Parameter] public Guid StackId { get; set; }
  [Parameter] public (Guid LeafId, short Index) Leaf { get; set; }
  [Parameter] public Guid GromplateId { get; set; }
  [Parameter] public Guid GrompleafId { get; set; }
  [Parameter] public Guid CommieldId { get; set; }
  [Parameter] public Guid CommeafId { get; set; }
  [Parameter] public bool Front { get; set; }
  [Parameter] public bool Back { get; set; }
  private ElementReference iframe;
  private string _src;

  protected override async Task OnParametersSetAsync() {
    await base.OnParametersSetAsync();
    var middle = "";
    if (StackId != Guid.Empty) {
      middle = "stack/" + StackId;
    } else if (!Leaf.Equals(default)) {
      middle = "leaf/" + Leaf.LeafId + "/" + Leaf.Index;
    } else if (GromplateId != Guid.Empty) {
      middle = "gromplate/" + GromplateId;
    } else if (GrompleafId != Guid.Empty) {
      middle = "gromplateleaf/" + GrompleafId;
    } else if (CommieldId != Guid.Empty) {
      middle = "communalfield/" + CommieldId;
    } else if (CommeafId != Guid.Empty) {
      middle = "communalfieldleaf/" + CommeafId;
    } else {
      throw new Exception("You done goofed.");
    }
    var tail = Back ? "/back" : Front ? "/front" : "";
    _src = UrlProvider.UserContentApi + middle + tail;
  }

  async Task iframeloaded() => await Js.InvokeAsync<string>("resizeIframe", iframe);
}

@* medTODO https://mathiasbynens.github.io/rel-noopener/ *@
