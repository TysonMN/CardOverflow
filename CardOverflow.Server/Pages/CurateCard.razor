@page "/Curate/Card/{Id:int}"
@using Microsoft.FSharp.Core
@using CardOverflow.Entity
@using CardOverflow.Debug
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using CardOverflow.Sanitation
@using Syncfusion.EJ2.Blazor
@using Syncfusion.EJ2.Blazor.RichTextEditor
@inject IToastService ToastService
@inherits OwningComponentBase<CardOverflowDb>
@*medTODO add "next" and "previous" navigation buttons that move up/down the list, and it'll need to remember the search parameters*@

@if (Card == null) {
  <p><em>@LoadingMessage</em></p>
} else {
  <EditCardDetail Card=@Card EditCard=@EditCard />
}

@code {
  [Parameter]
  public int Id { get; set; }
  [CascadingParameter]
  UserEntity User { get; set; }
  string LoadingMessage = "Loading...";
  AcquiredCard Card;
  EditCardCommand EditCard;

  protected override async Task OnInitializedAsync() {
    var x = await CardRepository.GetAcquired(Service, User?.Id ?? 0, Id);
    if (x.IsOk) {
      var xx = await SanitizeCardRepository.getEdit(Service, x.ResultValue.CardInstanceMeta.Id);
      if (xx.IsOk) {
        Card = x.ResultValue;
        EditCard = xx.ResultValue;
      } else {
        LoadingMessage = x.ErrorValue;
        ToastService.ShowError(x.ErrorValue);
      }
    } else {
      LoadingMessage = x.ErrorValue;
      ToastService.ShowError(x.ErrorValue);
    }
  }

}
