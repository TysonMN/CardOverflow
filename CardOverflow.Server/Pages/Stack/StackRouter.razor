@page "/stack"
@page "/stack/{StackId:guid}"
@page "/my/stack"

@using Microsoft.FSharp.Core
@using CardOverflow.Entity
@using CardOverflow.Debug
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using CardOverflow.Sanitation
@using ThoughtDesign.WebLibrary
@inject DbExecutor DbExecutor
@inject NavigationManager NavigationManager
@inherits QueryStringBase

@if (_isCurate) {
  <Curate SelectedLeafId=@_leafId Index=@_index />
} else {
  <Explore SelectedStackId=@StackId BranchId=@_branchId LeafId=@_leafId Index=@_index />
}

@code {
  [Parameter] public Guid? StackId { get; set; }
  private Guid? _leafId;
  private Guid? _branchId;
  private short? _index;
  private bool _isCurate => _path.StartsWith("my/", StringComparison.OrdinalIgnoreCase);
  private string _path = "";

  protected override void GetQueryStringValues() {
    _path = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
    if (StackId == null) {
      NavigationManager.TryGetQueryString<Guid?>("branch", out _branchId);
      NavigationManager.TryGetQueryString<Guid?>("leaf", out _leafId);
      NavigationManager.TryGetQueryString<short?>("index", out _index);
    }
  }

}
