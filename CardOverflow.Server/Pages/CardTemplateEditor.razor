@page "/CardTemplateInstance/{InstanceId:int}"
@using Microsoft.FSharp.Core
@using CardOverflow.Entity
@using CardOverflow.Debug
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using CardOverflow.Sanitation
@using CardOverflow.Server.Data
@inherits OwningComponentBase<CardOverflowDb>

<h1>Card Template</h1>
<hr />
@if (Template == null) {
  <p><em>Loading...</em></p>
} else {
  <p>Name: @Template.Name</p>
  <h2>Fields</h2>
  <table class="table">
    <thead>
      <tr>
        <th>Name</th>
        <th>Ordinal</th>
      </tr>
    </thead>
    <tbody>
      @foreach (var field in Template.LatestInstance.Fields.OrderBy(x => x.Ordinal)) {
        <tr>
          <td>@field.Name</td>
          <td>@field.Ordinal</td>
        </tr>
      }
    </tbody>
  </table>
  <EditForm Model="@Template" OnValidSubmit=@Submit>
    <h2>Card Templates</h2>
    <table class="table">
      <thead>
        <tr>
          <th>Question Template</th>
          <th>Answer Template</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>
            <InputTextArea @bind-Value=@Template.LatestInstance.QuestionTemplate class="form-control code" rows="25" />
            <ValidationMessage For="@(() => Template.LatestInstance.QuestionTemplate)" />
          </td>
          <td>
            <InputTextArea @bind-Value=@Template.LatestInstance.AnswerTemplate class="form-control code" rows="25" />
            <ValidationMessage For="@(() => Template.LatestInstance.AnswerTemplate)" />
          </td>
        </tr>
      </tbody>
    </table>
    <button type="submit" class="btn btn-primary">Save</button>
    <DataAnnotationsValidator />
  </EditForm>
}

@code {
  [Parameter]
  public int InstanceId { get; set; }
  CardTemplate Template;
  [CascadingParameter]
  UserEntity User { get; set; }

  protected override async Task OnInitializedAsync() {
    Template = await CardTemplateRepository.GetFromInstance(Service, InstanceId);
  }

  async Task Submit() {
    var x = SanitizeCardTemplate.Update(Service, User.Id, Template);
    if (x.IsOk) {
      await x.ResultValue;
    } else {
      // medTODO show error
    }
  }

}
