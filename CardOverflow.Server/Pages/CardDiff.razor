@page "/carddiff/{AId:int}/{BId:int}"
@using Microsoft.FSharp.Core
@using CardOverflow.Entity
@using CardOverflow.Debug
@using HtmlDiff
@using DiffPlex;
@using DiffPlex.DiffBuilder;
@using BlazorTextDiff;
@using Microsoft.FSharp.Collections
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using CardOverflow.Sanitation
@using Syncfusion.EJ2.Blazor
@using Syncfusion.EJ2.Blazor.RichTextEditor
@inject IToastService ToastService
@inject DbExecutor DbExecutor

@if (_a == null || _b == null) {
  <p><em>@_loadingMessage</em></p>
} else {
  <iframe srcdoc=@_summary style="width: 100%; height: 50vh; resize:vertical;" />
  <TextDiff OldText=@_a.FrontBackFrontSynthBackSynth.Item2 NewText=@_b.FrontBackFrontSynthBackSynth.Item2 CollapseContent=true MaxHeight="-1">
    <Header>
      <h6 style="padding: 12px; margin: 0px;">
        <span class="badge badge-primary">@($"{context.Modifications} Line Modifications")</span>
        <span class="badge badge-danger">@($"{context.Deletions} Line Deletions")</span>
        <span class="badge badge-success">@($"{context.Additions} Line Additions")</span>
      </h6>
    </Header>
  </TextDiff>
}

@code {
  [Parameter] public int AId { get; set; }
  [Parameter] public int BId { get; set; }
  private string _loadingMessage = "Loading...";
  private string _summary;
  private CardInstanceView _a;
  private CardInstanceView _b;

  protected override async Task OnParametersSetAsync() {
    await base.OnParametersSetAsync();
    var x = await DbExecutor.QueryAsync(db => CardViewRepository.instancePair(db, AId, BId));
    if (x.IsOk) {
      (_a, _b) = x.ResultValue;
      _summary = new HtmlDiff(_a.FrontBackFrontSynthBackSynth.Item2, _b.FrontBackFrontSynthBackSynth.Item2)
        //.IgnoreWhitespaceDifferences // lowTODO add an option for this
        .Build().Apply(ViewLogic.insertDiffColors);
    } else {
      ToastService.ShowError(x.ErrorValue);
      _loadingMessage = x.ErrorValue;
    }
  }

}
