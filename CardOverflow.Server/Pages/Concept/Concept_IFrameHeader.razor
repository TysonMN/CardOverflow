@using Microsoft.FSharp.Core
@using CardOverflow.Entity
@using CardOverflow.Debug
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using CardOverflow.Sanitation
@using CardOverflow.Server.Data
@inject DbExecutor DbExecutor
@inject IToastService ToastService
@inject UserContentHttpClient UserContentHttpClient
@inject TimeProvider TimeProvider

<div class="d-flex justify-content-end">
  by&nbsp;<a href="@($"/user/{_example.AuthorId}")" style="color:unset">@_example.Author</a>
  @if (_example.AuthorId == _user.Id) {
    <a href="concept/editexample/@_example.Id" title="Edit">
      <span class="oi oi-pencil ml-2" />
    </a>
  }
  <a href="concept/copyleaf/@Leaf.Id" title="Edit a Copy">
    <span class="fas fa-copy ml-2" />
  </a>
  <a href="/example/@_example.Id/revision" title="Revisions">
    <i class="fas fa-history ml-2"></i>
  </a>
  @if (Leaf.IsLatest) {
    <a>
      @*Hack: The empty <a> keeps it in alignment with the other icons*@
      <span class="fas fa-sync text-success ml-2" title="Up to date" />
    </a>
  } else {
    <a href="@($"conceptdiff/{Leaf.Id}/Older Example Leaf/{_example.Leaf.Id}/Latest Example Leaf")">
      <span class="fas fa-sync text-danger ml-2" title="Out of date" />
    </a>
  }
</div>

@code {
  [CascadingParameter] Task<UserClaims> UserTask { get; set; }
  private UserClaims _user = UserClaims.init;
  [Parameter] public LeafMeta Leaf { get; set; }
  [Parameter] public CardOverflow.Pure.ExploreConcept Concept { get; set; }
  private Example _example => Concept.Examples.Single(b => b.Id == Leaf.ExampleId);

  public override async Task SetParametersAsync(ParameterView parameters) {
    await base.SetParametersAsync(parameters);
    _user = await UserTask;
    StateHasChanged();
  }

}
