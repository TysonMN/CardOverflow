@page "/Curate/Card/Create"
@attribute [Authorize]
@using Microsoft.FSharp.Core
@using CardOverflow.Entity
@using CardOverflow.Debug
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using CardOverflow.Sanitation
@using Syncfusion.EJ2.Blazor
@using Syncfusion.EJ2.Blazor.RichTextEditor
@inject IToastService ToastService
@inject DbExecutor DbExecutor

@if (_card == null || _templates == null) {
  <p><em>@LoadingMessage</em></p>
} else {
  <EditCardDetail Card=@_card Templates=@_templates NewEditCardOnSave=true />
}

@code {
  [CascadingParameter] UserEntity User { get; set; }
  string LoadingMessage = "Loading...";
  private AcquiredCard _card;
  private IEnumerable<ViewTemplateWithAllInstances> _templates;

  protected override async Task OnParametersSetAsync() {
    await base.OnParametersSetAsync();
    if (User != null) {
      _card = await DbExecutor.QueryAsync(db => CardRepository.getNew(db, User.Id));
      _templates = await DbExecutor.QueryAsync(db => SanitizeTemplate.GetMine(db, User.Id));
    }
  }

}
