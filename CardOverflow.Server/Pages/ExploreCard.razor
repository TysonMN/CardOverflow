@page "/Card/{Id:int}"
@using Microsoft.FSharp.Core
@using CardOverflow.Entity
@using CardOverflow.Debug
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using CardOverflow.Sanitation
@using CardOverflow.Server.Data
@inject CardOverflowDb Db

@if (Card == null) {
  <p><em>Loading...</em></p>
} else {
  <div>
    Gotten by @Card.Users
    @if (User == null) {
      <p>Log in to Get</p>
    } else {
      @if (Card.LatestInstance.IsAcquired) {
        <button class="btn btn-secondary" disabled>
          Gotten
        </button>
      } else {
        <button class="btn btn-primary" onclick=@(() => Acquire(Card.LatestInstance.Id))>
          Get
        </button>
      }
    }
    Description: @Card.Description
  </div>
  <div>
    <iframe sandbox allow-scripts class="concept-iframe" srcdoc=@Card.LatestInstance.FrontBackFrontSynthBackSynth.Item2></iframe>
  </div>
  <div class="text-right">
    By @Card.Author
  </div>
  <div>
    <h3>Tags</h3>
    <ul class="d-flex flex-wrap list-unstyled">
      @foreach (var tag in @Card.Tags.Where(x => !x.IsAcquired).OrderBy(x => x.Count)) {
        <li class="m-1">
          <button type="button" class="btn btn-outline-primary btn-sm" onclick="@(() => AcquireTag(tag.Name))">
            <span class="badge badge-light">@tag.Count</span> @tag.Name
          </button>
        </li>
      }
    </ul>
    @if (User != null) {
      <h3>Your Tags</h3>
      <ul class="d-flex flex-wrap list-unstyled">
        @foreach (var tag in @Card.Tags.Where(x => x.IsAcquired).OrderBy(x => x.Count)) {
          <li class="m-1">
            <button type="button" class="btn btn-primary btn-sm">
              <span class="badge badge-light">@tag.Count</span> @tag.Name
            </button>
          </li>
        }
        @if (Card.LatestInstance.IsAcquired) {
          <TagAdder CardId=@Card.Id />
        }
      </ul>
    }
  </div>
  <div>
    <h3>Relationships</h3>
    <ul class="list-unstyled">
      @foreach (var relationship in Card.Relationships) {
        <li>
          <span class="curate-tooltip-target">
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <span class="oi oi-eye" aria-hidden="true"></span>
            @if (relationship.IsAcquired) {
              <span class="oi oi-circle-check text-success"></span>
            } else {
              <span class="oi oi-circle-x text-danger"></span>
            }
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <div class="curate-tooltip-content">
              @* https://stackoverflow.com/questions/19739001/which-is-the-difference-between-srcdoc-and-src-datatext-html-in-an/ *@
              <iframe sandbox allow-scripts class="curate-iframe-tooltip" srcdoc="@relationship.Front"></iframe>
            </div>
          </span>
          <a href="card/@relationship.CardId">@relationship.Name</a>
        </li>
      }
    </ul>
  </div>
  <div>
    <h3>Comments</h3>
    <ul class="list-group">
      @foreach (var comment in @Card.Comments) {
        <li class="list-group-item">
          @comment.User: @comment.Text
        </li>
      }
      <Comment CardId=@Card.Id />
    </ul>
  </div>
}

@code {
  [Parameter]
  public int Id { get; set; }
  CardOverflow.Pure.ExploreCard Card;
  [CascadingParameter]
  UserEntity User { get; set; }

  protected override async Task OnInitAsync() {
    Card = await CardRepository.Get(Db, Id, User?.Id ?? 0);
  }

  async Task Acquire(int cardId) {
    await CardRepository.AcquireCardsAsync(Db, User.Id, new List<int> { cardId });
    Card.LatestInstance.IsAcquired = true;
    StateHasChanged();
  }

  void AcquireTag(string name) {
    if (SanitizeTagRepository.AddToRaw(Db, name, User.Id, Card.Id).IsOk) {
      Card.Tags.Single(x => x.Name == name).IsAcquired = true;
      StateHasChanged();
    } else {
      // show error
    }
  }

}
