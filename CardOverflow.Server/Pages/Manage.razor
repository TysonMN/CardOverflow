@page "/Manage"
@using Microsoft.FSharp.Core
@using CardOverflow.Entity
@using CardOverflow.Debug
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using CardOverflow.Sanitation
@inject CardOverflowDb Db

@if (concepts == null) {
  <p><em>Loading...</em></p>
} else {
  <div>
    <div class="modal @(selectedConcept == null ? "" : "manage-show-modal")" tabindex="-1" role="dialog" >
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Modal title</h5>
            <button type="button" class="close" aria-label="Close" onclick=@CloseEditConceptModal>
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <p>Modal body text goes here.</p>
          </div>
          <div class="modal-footer">
            <button type="button" onclick=@CloseEditConceptModal class="btn btn-primary">Save changes</button>
            <button type="button" onclick=@CloseEditConceptModal class="btn btn-secondary">Close</button>
          </div>
        </div>
      </div>
    </div>
    <ul>
      @foreach (var concept in concepts) {
        <li class="@(selectedConcept?.Id == concept.Id ? "manage-selected" : "")"
            onclick=@(() =>  ConceptClick(concept.Id))>
          @concept.Name
          <ul>
            @foreach (var facet in @concept.AcquiredFacets) {
              <li>@facet.Description</li>
              <li>
                @* https://stackoverflow.com/questions/19739001/which-is-the-difference-between-srcdoc-and-src-datatext-html-in-an/ *@
                <iframe sandbox allow-scripts class="study-iframe" srcdoc="@facet.FrontSide"></iframe>
              </li>
            }
          </ul>
        </li>
      }
    </ul>
  </div>
}

@code {
  IList<AcquiredConcept> concepts;
  AcquiredConcept selectedConcept;
  int userId = 3;

  protected override async Task OnInitAsync() {
    concepts = (await ConceptRepository.GetAcquiredConceptsAsync(Db, 3)).ToList();
  }

  void ConceptClick(int conceptId) {
    selectedConcept = concepts.First(x => x.Id == conceptId);
    StateHasChanged();
  }

  void CloseEditConceptModal() {
    selectedConcept = null;
  }

}
