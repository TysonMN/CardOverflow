@page "/Manage"
@using Microsoft.FSharp.Core
@using CardOverflow.Entity
@using CardOverflow.Debug
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using CardOverflow.Sanitation
@inject CardOverflowDb Db

@if (concepts == null) {
  <p><em>Loading...</em></p>
} else {
  <div>

    @if (editingConcept != null) {
      <div class="modal manage-show-modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <EditForm Model="@editingConcept" OnValidSubmit="@UpdateConcept">
              <div class="modal-header">
                <h5 class="modal-title">Modal title</h5>
                <button type="button" class="close" aria-label="Close" onclick=@CloseEditConceptModal>
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <div class="form-group">
                  <label for="modal-name">Name:</label>
                  <InputText Id="modal-name" @bind-value="@editingConcept.Name" /> @*this seems to break validation: @bind-value:event="oninput"*@
                </div>
              </div>
              <div class="modal-footer">
                <div class="container">
                  <div class="row">
                    <button type="submit" class="btn btn-primary">Save</button>
                  </div>
                  <div class="row">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                  </div>
                </div>
              </div>
            </EditForm>
          </div>
        </div>
      </div>
    }

    <ul>
      @foreach (var concept in concepts) {
        <li class="@(editingConcept?.Id == concept.Id ? "manage-selected" : "")"
            onclick=@(() =>  ConceptClick(concept.Id))>
          @concept.Name
          <ul>
            @foreach (var facet in @concept.AcquiredFacets) {
              <li>@facet.Description</li>
              <li>
                @* https://stackoverflow.com/questions/19739001/which-is-the-difference-between-srcdoc-and-src-datatext-html-in-an/ *@
                <iframe sandbox allow-scripts class="study-iframe" srcdoc="@facet.FrontSide"></iframe>
              </li>
            }
          </ul>
        </li>
      }
    </ul>
  </div>
}

@code {
  IList<AcquiredConcept> concepts;
  AcquiredConcept editingConcept;
  int userId = 3;

  protected override async Task OnInitAsync() {
    concepts = (await ConceptRepository.GetAcquiredConceptsAsync(Db, 3)).ToList();
  }

  void ConceptClick(int conceptId) {
    editingConcept =
      new AcquiredConcept {
        Id = conceptId,
        Name = concepts.First(x => x.Id == conceptId).Name
      };
    StateHasChanged();
  }

  void CloseEditConceptModal() {
    editingConcept = null;
  }

  async Task UpdateConcept() {
    var result = SanitizeConceptRepository.Update(Db, userId, editingConcept.Id, editingConcept.Name);
    if (result.IsOk) {
      await result.ResultValue;
      var targetConcept = concepts.First(x => x.Id == editingConcept.Id);
      targetConcept.Name = editingConcept.Name;
      CloseEditConceptModal();
    } else {
      // lowToMedTODO this returns an error; show it
    }

  }

}
