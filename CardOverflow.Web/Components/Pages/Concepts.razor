@page "/Concepts"
@using CardOverflow.Api
@using CardOverflow.Entity
@using CardOverflow.Web.Helpers
@inject IJSRuntime JsRuntime
@inject CardRepository CardRepository
@inject ConceptRepository ConceptRepository

<div class="container">
  @foreach (var concept in ConceptList) {
    <ConceptView Concept="@concept" Delete="@(() => Delete(concept))" />
  }
</div>

<button class="btn btn-success" onclick="@AddConcept">Add Concept</button>
<button class="btn btn-primary" onclick="@Save">Save</button>

@functions {
  List<Concept> ConceptList;

  protected override async Task OnInitAsync() {
    ConceptList = ConceptRepository.GetConcepts();
  }

  void Delete(Concept concept) {
    ConceptList.Remove(concept);
    StateHasChanged();
  }

  void AddConcept() =>
    new Concept { Title = "Concept Title", Description = "Concept Description", Cards = new List<Card> { new Card { Question = "Question", Answer = "Answer" } } }
    .Do(ConceptList.Add);

  void Save() =>
    ConceptRepository.SaveConcepts(ConceptList);

}
