@using CardOverflow.Api
@using CardOverflow.Entity
@using CardOverflow.Web.Helpers
@inject IJSRuntime JsRuntime
@inject CardRepository CardRepository
@inject ConceptRepository ConceptRepository

<div class="row">
  <div class="col">
    ★
    <ClickToEditInputText Text="@Concept.Title" UpdateText="@(s => Concept.Title = s)" />
  </div>
  <div class="col">
    <ClickToEditInputText Text="@Concept.Description" UpdateText="@(s => Concept.Description = s)" />
  </div>
  <div class="col">
    <button onclick="@Delete">Delete</button>
    <button onclick="@AddCard">Add Card</button>
  </div>
</div>
<div class="container">
  @foreach (var card in Concept.Cards) {
    <CardView Card="@card" Delete="@(() => DeleteCard(card))" />
  }
</div>

@functions {
  [Parameter] Action Delete { get; set; }
  [Parameter] Concept Concept { get; set; }

  void AddCard() {
    Concept.Cards.Add(new Card { Question = "Question", Answer = "Answer" });
    StateHasChanged();
  }

  void DeleteCard(Card card) {
    Concept.Cards.Remove(card);
    StateHasChanged();
  }

}
