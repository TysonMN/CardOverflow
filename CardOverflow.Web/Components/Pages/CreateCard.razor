@page "/CreateCard"
@using CardOverflow.Api
@using CardOverflow.Entity
@inject CardRepository CardRepository
@inject ConceptRepository ConceptRepository

<input type="text" bind-value-oninput="@Question" placeholder="Question" />
<input type="text" bind-value-oninput="@Answer" placeholder="Answer" />
<button class="btn btn-primary" onclick="@Save">Save</button>

<table class='table'>
  <thead>
    <tr>
      <th>Title</th>
      <th>Description</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    @foreach (var concept in Concepts) {
      <tr>
        <td>@concept.Title</td>
        <td>@concept.Description</td>
        <td>
          <button onclick="@(() => Delete(concept.Id))">Delete</button>
        </td>
      </tr>
    }
    <tr>
      <td><input type="text" bind-value-oninput="@Title" placeholder="Title" /></td>
      <td><input type="text" bind-value-oninput="@Description" placeholder="Description" /></td>
      <td><button onclick="@Save">Save</button></td>
    </tr>
  </tbody>
</table>

@functions {
  string Question = "";
  string Answer = "";
  string Title = "";
  string Description = "";
  List<Concept> Concepts;

  protected override async Task OnInitAsync() {
    Concepts = ConceptRepository.GetConcepts();
  }

  void Delete(int id) {
    Concepts.Remove(Concepts.First(c => c.Id == id));
  }

  void Save() {
    Concepts.Add(new Concept { Title = Title, Description = Description }); // TODO Clicking save always adds a new row lol
    ConceptRepository.SaveConcepts(Concepts);
    Title = "";
    Description = "";
    // TODO: Set focus back on Question https://devblogs.microsoft.com/aspnet/blazor-0-3-0-experimental-release-now-available/
  }

}
